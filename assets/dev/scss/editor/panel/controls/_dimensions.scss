.elementor-control-type-dimensions {

	.elementor-control-dimensions {
		display: flex;
	}

	li {
		flex: 1;
		transition: flex-grow .3s ease-in-out;

		input,
		.elementor-link-dimensions {
			display: block;
			text-align: center;
			width: 100%;
			height: $control-unit;
		}

		input {
			@include border-start(none);
			border-radius: 0;
			padding: 3px;

			&:focus {
				@include border-start(1px solid var(--e-a-border-color-bold));
				@include margin-start(-1px);
				width: calc(100% + 1px);

				+ .elementor-control-dimension-label {
					color: var(--e-a-color-txt);
				}
			}
		}

		.elementor-link-dimensions {
			border: var(--e-a-border-bold);
			@include border-start(none);
			background-color: var(--e-a-bg-default);
			padding: 0;
			outline: none;
			border-radius: getValueByDirection(0 3px 3px 0, 3px 0 0 3px);
			cursor: pointer;
		}

		&:first-child {

			input {
				@include border-start(1px solid var(--e-a-border-color-bold));
				border-radius: getValueByDirection(3px 0 0 3px, 0 3px 3px 0);

				&:focus {
					border-color: $editor-light;
					@include margin-start(0);
					width: 100%;
				}
			}
		}

		&:last-child {
			max-width: $control-unit;
		}
	}

	&.e-units-custom {

		li {

			&.elementor-control-dimension:focus-within {
				flex: 2.5;
			}
		}
	}

	.elementor-control-dimension-label {
		color: var(--e-a-color-txt-disabled);
		display: block;
		text-align: center;
		font-size: 9px;
		text-transform: uppercase;
		padding-top: 5px;
	}

	.elementor-link-dimensions {

		&.unlinked {
			background-color: var(--e-a-bg-default);

			.elementor-linked {
				display: none;
			}
		}

		&:not(.unlinked) {
			background-color: var(--e-a-bg-active-bold);
			color: var(--e-a-color-txt-accent);
			border-color: var(--e-a-border-color-bold);

			.elementor-unlinked {
				display: none;
			}
		}
	}
}
